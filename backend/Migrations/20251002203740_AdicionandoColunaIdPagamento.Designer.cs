// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Config.db;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Conexao))]
    [Migration("20251002203740_AdicionandoColunaIdPagamento")]
    partial class AdicionandoColunaIdPagamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Entities.Categoria", b =>
                {
                    b.Property<int>("CodigoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CD_CATEGORIA");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodigoCategoria"));

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NM_CATEGORIA");

                    b.HasKey("CodigoCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("backend.Entities.Pedido", b =>
                {
                    b.Property<int>("CodigoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("COD_PEDIDO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodigoPedido"));

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("CD_CHAVE");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("CONTATO");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamptz")
                        .HasColumnName("DT_PEDIDO");

                    b.Property<DateOnly>("DataRetirada")
                        .HasColumnType("date")
                        .HasColumnName("DT_RETIRADA");

                    b.Property<TimeOnly>("HoraRetirada")
                        .HasColumnType("time")
                        .HasColumnName("HR_RETIRADA");

                    b.Property<string>("MerchantOrderId")
                        .HasColumnType("text")
                        .HasColumnName("MERCHANT_ORDER_ID");

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("NM_PESSOA");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("PaymentId");

                    b.Property<string>("PreferenceId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("PREFERENCE_ID");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("VL_TOTAL");

                    b.HasKey("CodigoPedido");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("backend.Entities.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduto"));

                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("DateNow")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Imagem")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("Preco")
                        .IsRequired()
                        .HasColumnType("numeric");

                    b.Property<long?>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("IdProduto");

                    b.HasIndex("CodigoCategoria");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("backend.Entities.ProdutoPedido", b =>
                {
                    b.Property<int>("CodigoPedido")
                        .HasColumnType("integer")
                        .HasColumnName("COD_PEDIDO");

                    b.Property<int>("CodigoProduto")
                        .HasColumnType("integer")
                        .HasColumnName("COD_PRODUTO");

                    b.Property<int>("CodigoProdutoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("COD_PROD_PEDIDO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodigoProdutoPedido"));

                    b.Property<int>("QuantidadeProduto")
                        .HasColumnType("integer")
                        .HasColumnName("QTD_PRODUTO");

                    b.HasKey("CodigoPedido", "CodigoProduto");

                    b.HasIndex("CodigoProduto");

                    b.ToTable("ProdutoPedido");
                });

            modelBuilder.Entity("backend.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<short>("Admin")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateNow")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Admin = (short)1,
                            DateNow = new DateTime(2025, 10, 2, 20, 37, 39, 872, DateTimeKind.Utc).AddTicks(5126),
                            Email = "admin@admin.com",
                            Nome = "Administrador",
                            Senha = "admin",
                            Status = (short)0
                        });
                });

            modelBuilder.Entity("backend.Entities.Produto", b =>
                {
                    b.HasOne("backend.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CodigoCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("backend.Entities.ProdutoPedido", b =>
                {
                    b.HasOne("backend.Entities.Pedido", "Pedido")
                        .WithMany("ProdutosPedido")
                        .HasForeignKey("CodigoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Entities.Produto", "Produto")
                        .WithMany("ProdutosPedido")
                        .HasForeignKey("CodigoProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("backend.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("backend.Entities.Pedido", b =>
                {
                    b.Navigation("ProdutosPedido");
                });

            modelBuilder.Entity("backend.Entities.Produto", b =>
                {
                    b.Navigation("ProdutosPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
